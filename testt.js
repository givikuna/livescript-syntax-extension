// Generated by LiveScript 1.6.0
(function(){
  var ref$, println, define, dec, inc, len, filter, map, even, something;
  ref$ = require('../index'), println = ref$.println, define = ref$.define, dec = ref$.dec, inc = ref$.inc, len = ref$.len;
  ref$ = require('prelude-ls'), filter = ref$.filter, map = ref$.map, even = ref$.even;
  something = fold(curry$(function(x$, y$){
    return x$ + y$;
  }), 0)(
  filter(even)(
  map((function(it){
    return Math.pow(it, 2);
  }))(
  [1, 2, 3, 4, 5])));
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
