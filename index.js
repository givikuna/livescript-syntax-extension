// Generated by LiveScript 1.6.0
(function(){
  var lib, fs, preludeLs;
  lib = require('./lib');
  fs = require('fs');
  preludeLs = require('prelude-ls');
  function lsseify(){
    var i$, ref$, len$, key, results$ = [];
    for (i$ = 0, len$ = (ref$ = Object.keys(lib)).length; i$ < len$; ++i$) {
      key = ref$[i$];
      results$.push(global[key] = lib[key]);
    }
    return results$;
  }
  function calcify(){
    var i$, ref$, len$, key, results$ = [];
    for (i$ = 0, len$ = (ref$ = Object.keys(lib)).length; i$ < len$; ++i$) {
      key = ref$[i$];
      global[key] = lib[key];
    }
    for (i$ = 0, len$ = (ref$ = Object.keys(preludeLs)).length; i$ < len$; ++i$) {
      key = ref$[i$];
      results$.push(global[key] = preludeLs[key]);
    }
    return results$;
  }
  module.exports = {
    calcify: calcify,
    lsseify: lsseify,
    mapcar: lib.mapcar,
    str: lib.str,
    int: lib.int,
    random: lib.random,
    upper: lib.upper,
    inc: lib.inc,
    dec: lib.dec,
    supertrim: lib.supertrim,
    freq: lib.freq,
    len: lib.len,
    enumerate: lib.enumerate,
    member: lib.member,
    stringAppend: lib.stringAppend,
    map2: lib.map2,
    listRef: lib.listRef,
    hashRef: lib.hashRef,
    buildList: lib.buildList,
    title: lib.title,
    uniq: lib.uniq,
    memoize: lib.memoize,
    sorted: lib.sorted,
    noop: lib.noop,
    id: lib.id,
    before: lib.before,
    after: lib.after,
    throttle: lib.throttle,
    debounce: lib.debounce,
    lazy: lib.lazy,
    listTo: lib.listTo,
    listFrom: lib.listFrom,
    bool: lib.bool,
    cond: lib.cond,
    pipe: lib.pipe,
    expt: lib.expt,
    replaceAll: lib.replaceAll,
    removeAll: lib.removeAll,
    iter: lib.iter,
    say: lib.say,
    indexOf: lib.indexOf,
    isNumeric: lib.isNumeric,
    csc: lib.csc,
    sec: lib.sec,
    cot: lib.cot,
    arcsin: lib.arcsin,
    arccos: lib.arccos,
    arctan: lib.arctan,
    log: lib.log,
    expm1: lib.expm1,
    replace: lib.replace,
    trimStart: lib.trimStart,
    trimEnd: lib.trimEnd,
    input: lib.input,
    charcode: lib.charcode,
    makeHash: lib.makeHash,
    fold0: lib.fold0,
    foldr0: lib.foldr0,
    foldl0: lib.foldl0,
    transpose: lib.transpose,
    chunk: lib.chunk,
    sleep: lib.sleep,
    lambda: lib.lambda,
    fn: lib.fn,
    defun: lib.defun,
    define: lib.define,
    defconstant: lib.defconstant,
    defparameter: lib.defparameter,
    defvar: lib.defvar,
    defmacro: lib.defmacro,
    foldf: lib.foldf,
    foldt: lib.foldt,
    foldstr: lib.foldstr,
    changeIn: lib.changeIn,
    isInt: lib.isInt,
    naturalNumber: lib.naturalNumber,
    perfect: lib.perfect,
    divisors: lib.divisors,
    palindrome: lib.palindrome,
    factorial: lib.factorial,
    g: lib.g,
    G: lib.G,
    E: lib.E,
    toDeg: lib.toDeg,
    toRad: lib.toRad,
    exec: lib.exec,
    addMatrix: lib.addMatrix,
    minusMatrix: lib.minusMatrix,
    invertMatrix: lib.invertMatrix,
    multiplyMatrix: lib.multiplyMatrix,
    divideMatrix: lib.divideMatrix,
    comb: lib.comb,
    summation: lib.summation,
    microCoulomb: lib.microCoulomb,
    coulomb: lib.coulomb,
    chargePerElectron: lib.chargePerElectron,
    chargePerProton: lib.chargePerProton,
    C: lib.C,
    mem: lib.mem,
    put: lib.put,
    explode: lib.explode,
    implode: lib.implode
  };
}).call(this);
